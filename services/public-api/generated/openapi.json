{
  "openapi": "3.0.0",
  "info": {
    "title": "Movieweb",
    "description": "Public REST API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8081",
      "description": "Development server"
    }
  ],
  "paths": {
    "/auth/authorize": {
      "post": {
        "operationId": "authorize",
        "summary": "Obtain JWT token",
        "description": "Creates a new JWT. Tokens are ignored if user has started a session.",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/LogInCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "$ref": "#/components/responses/TokenResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/auth/log-in": {
      "post": {
        "operationId": "logIn",
        "summary": "Obtain JWT token as cookie",
        "tags": [
          "auth"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LogInCredentials"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "headers": {
              "Set-Cookie": {
                "schema": {
                  "type": "string",
                  "example": "connect.sid=abcde12345; Domain=localhost; Path=/; HttpOnly"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/auth/log-out": {
      "get": {
        "operationId": "logOut",
        "summary": "Drop JWT token cookie",
        "tags": [
          "auth"
        ],
        "responses": {
          "200": {
            "description": "Logged out successfully."
          }
        }
      }
    },
    "/movies": {
      "get": {
        "operationId": "getMovies",
        "summary": "Retrieve a list of movies",
        "tags": [
          "movies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "year",
                "avg_rating",
                "rating_count"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/MovieListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "operationId": "getMovieById",
        "summary": "Get movie by ID",
        "tags": [
          "movies"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users/{id}/followers": {
      "get": {
        "operationId": "getFollowers",
        "summary": "Retrieve a list of followers",
        "tags": [
          "users",
          "relations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users/{id}/followers/{follower_id}": {
      "post": {
        "operationId": "addFollower",
        "summary": "Add follower",
        "tags": [
          "users",
          "relations"
        ],
        "security": [
          {
            "JwtBearerAuth": []
          },
          {
            "JwtCookieAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/follower_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Relation created successfully."
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      },
      "delete": {
        "operationId": "removeFollower",
        "summary": "Remove follower",
        "tags": [
          "users",
          "relations"
        ],
        "security": [
          {
            "JwtBearerAuth": []
          },
          {
            "JwtCookieAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/follower_id"
          }
        ],
        "responses": {
          "204": {
            "description": "Relation removed successfully."
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users/{id}/follows": {
      "get": {
        "operationId": "getFollowedBy",
        "summary": "Retrieve a list of followed users",
        "tags": [
          "users",
          "relations"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "operationId": "getReviews",
        "summary": "Retrieve a list of reviews",
        "tags": [
          "reviews"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/movies/{id}/reviews": {
      "get": {
        "operationId": "getMovieReviews",
        "summary": "Retrieve a list of movie reviews",
        "tags": [
          "movies",
          "reviews"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users/{id}/reviews": {
      "get": {
        "operationId": "getUserReviews",
        "summary": "Retrieve a list of reviews by user",
        "tags": [
          "users",
          "reviews"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          },
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "$ref": "#/components/parameters/sort_dir"
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/ReviewListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Retrieve a list of users",
        "tags": [
          "users"
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/limit"
          },
          {
            "$ref": "#/components/parameters/skip"
          },
          {
            "in": "query",
            "name": "login",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "description": "Limits results to provided login or logins."
          }
        ],
        "responses": {
          "200": {
            "$ref": "#/components/responses/UserListResponse"
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by ID",
        "tags": [
          "users"
        ],
        "security": [
          {},
          {
            "JwtBearerAuth": []
          },
          {
            "JwtCookieAuth": []
          }
        ],
        "parameters": [
          {
            "$ref": "#/components/parameters/id"
          }
        ],
        "responses": {
          "200": {
            "description": "User details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "$ref": "#/components/responses/ValidationError"
          }
        }
      }
    }
  },
  "components": {
    "parameters": {
      "id": {
        "in": "path",
        "name": "id",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "required": true,
        "description": "Object ID as UUID v4"
      },
      "limit": {
        "in": "query",
        "name": "limit",
        "schema": {
          "type": "integer",
          "minimum": 1,
          "default": 100
        },
        "required": false,
        "description": "Maximum number of elements to fetch."
      },
      "skip": {
        "in": "query",
        "name": "skip",
        "schema": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "required": false,
        "description": "Offset for selecting sorted items."
      },
      "sort_dir": {
        "in": "query",
        "name": "sort_dir",
        "schema": {
          "$ref": "#/components/schemas/SortDir"
        },
        "required": false,
        "description": "Sorting direction. Used only when \"sort\" is defined."
      },
      "follower_id": {
        "in": "path",
        "name": "follower_id",
        "schema": {
          "type": "string",
          "format": "uuid"
        },
        "required": true,
        "description": "Follower ID as UUID v4"
      }
    },
    "schemas": {
      "SortDir": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "default": "asc"
      },
      "Movie": {
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "poster_url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "poster_url": {
            "type": "string",
            "format": "url"
          },
          "background_url": {
            "type": "string",
            "format": "url"
          },
          "director": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "login",
          "name",
          "avatar_url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "login": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "avatar_url": {
            "type": "string",
            "format": "url"
          },
          "following": {
            "type": "boolean",
            "description": "Set on selected requests when client authenticated. Says if current user is a follower."
          }
        }
      },
      "ListInfo": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of entries returned with request."
          },
          "totalCount": {
            "type": "integer",
            "minimum": 0,
            "description": "Number of all entries matching criteria."
          }
        }
      },
      "ValidationErrorList": {
        "type": "object",
        "properties": {
          "detail": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "ValidationError": {
        "type": "object",
        "properties": {
          "loc": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        }
      },
      "LogInCredentials": {
        "type": "object",
        "required": [
          "username",
          "password"
        ],
        "properties": {
          "username": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "movie_id",
          "rating",
          "created"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "movie_id": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "comment": {
            "type": "string"
          },
          "created": {
            "type": "string",
            "format": "date-time"
          },
          "movie": {
            "$ref": "#/components/schemas/Movie"
          },
          "user": {
            "$ref": "#/components/schemas/User"
          }
        }
      }
    },
    "responses": {
      "ValidationError": {
        "description": "Validation error.",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ValidationErrorList"
            }
          }
        }
      },
      "TokenResponse": {
        "description": "JWT token.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "access_token",
                "token_type"
              ],
              "properties": {
                "access_token": {
                  "type": "string"
                },
                "token_type": {
                  "type": "string",
                  "enum": [
                    "bearer"
                  ]
                }
              }
            }
          }
        }
      },
      "MovieListResponse": {
        "description": "List of movies.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "movies",
                "info"
              ],
              "properties": {
                "movies": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                },
                "info": {
                  "$ref": "#/components/schemas/ListInfo"
                }
              }
            }
          }
        }
      },
      "ReviewListResponse": {
        "description": "List of reviews.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "reviews",
                "info"
              ],
              "properties": {
                "reviews": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                },
                "info": {
                  "$ref": "#/components/schemas/ListInfo"
                }
              }
            }
          }
        }
      },
      "UserListResponse": {
        "description": "List of users.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "users",
                "info"
              ],
              "properties": {
                "users": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                },
                "info": {
                  "$ref": "#/components/schemas/ListInfo"
                }
              }
            }
          }
        }
      }
    },
    "securitySchemes": {
      "JwtBearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      },
      "JwtCookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "connect.sid"
      }
    }
  },
  "tags": []
}