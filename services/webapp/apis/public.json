{
  "openapi": "3.0.0",
  "info": {
    "title": "Movieweb",
    "description": "Public REST API",
    "version": "1.0.0"
  },
  "paths": {
    "/movies": {
      "get": {
        "operationId": "getMovies",
        "summary": "Retrieve a list of movies",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/ArgLimit"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "$ref": "#/components/schemas/ArgSkip"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "year",
                "avg_rating",
                "rating_count"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "in": "query",
            "name": "sort_dir",
            "schema": {
              "$ref": "#/components/schemas/ArgSortDir"
            },
            "required": false,
            "description": "Sorting direction. Used only when \"sort\" is defined."
          }
        ],
        "responses": {
          "200": {
            "description": "List of movies.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Movie"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{id}": {
      "get": {
        "operationId": "getMovieById",
        "summary": "Get movie by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Movie ID as UUID v4"
          }
        ],
        "responses": {
          "200": {
            "description": "Movie details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Movie"
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "operationId": "getReviews",
        "summary": "Retrieve a list of reviews",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/ArgLimit"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "$ref": "#/components/schemas/ArgSkip"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "in": "query",
            "name": "sort_dir",
            "schema": {
              "$ref": "#/components/schemas/ArgSortDir"
            },
            "required": false,
            "description": "Sorting direction. Used only when \"sort\" is defined."
          }
        ],
        "responses": {
          "200": {
            "description": "List of ratings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/movies/{id}/reviews": {
      "get": {
        "operationId": "getMovieReviews",
        "summary": "Retrieve a list of movie reviews",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "Movie ID as UUID v4"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/ArgLimit"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "$ref": "#/components/schemas/ArgSkip"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "in": "query",
            "name": "sort_dir",
            "schema": {
              "$ref": "#/components/schemas/ArgSortDir"
            },
            "required": false,
            "description": "Sorting direction. Used only when \"sort\" is defined."
          }
        ],
        "responses": {
          "200": {
            "description": "List of ratings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}/reviews": {
      "get": {
        "operationId": "getUserReviews",
        "summary": "Retrieve a list of reviews by user",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "User ID as UUID v4"
          },
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/ArgLimit"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "$ref": "#/components/schemas/ArgSkip"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "sort",
            "schema": {
              "type": "string",
              "enum": [
                "created",
                "rating"
              ]
            },
            "required": false,
            "description": "Sorting criteria."
          },
          {
            "in": "query",
            "name": "sort_dir",
            "schema": {
              "$ref": "#/components/schemas/ArgSortDir"
            },
            "required": false,
            "description": "Sorting direction. Used only when \"sort\" is defined."
          }
        ],
        "responses": {
          "200": {
            "description": "List of ratings.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Review"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "operationId": "getUsers",
        "summary": "Retrieve a list of users",
        "parameters": [
          {
            "in": "query",
            "name": "limit",
            "schema": {
              "$ref": "#/components/schemas/ArgLimit"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "skip",
            "schema": {
              "$ref": "#/components/schemas/ArgSkip"
            },
            "required": false
          },
          {
            "in": "query",
            "name": "login",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "required": false,
            "description": "Limits results to provided login or logins."
          }
        ],
        "responses": {
          "200": {
            "description": "List of users.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "operationId": "getUserById",
        "summary": "Get user by ID",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "schema": {
              "type": "string",
              "format": "uuid"
            },
            "required": true,
            "description": "User ID as UUID v4"
          }
        ],
        "responses": {
          "200": {
            "description": "User details.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "422": {
            "description": "Validation error.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HTTPValidationError"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ArgLimit": {
        "type": "integer",
        "minimum": 1,
        "default": 100
      },
      "ArgSkip": {
        "type": "integer",
        "minimum": 0,
        "default": 0
      },
      "ArgSortDir": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "default": "asc"
      },
      "ValidationError": {
        "title": "ValidationError",
        "type": "object",
        "properties": {
          "loc": {
            "title": "Location",
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "msg": {
            "title": "Message",
            "type": "string"
          },
          "type": {
            "title": "Error Type",
            "type": "string"
          }
        }
      },
      "HTTPValidationError": {
        "title": "HTTPValidationError",
        "type": "object",
        "properties": {
          "detail": {
            "title": "Detail",
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ValidationError"
            }
          }
        }
      },
      "Movie": {
        "type": "object",
        "required": [
          "id",
          "title",
          "slug",
          "poster_url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "title": {
            "type": "string"
          },
          "slug": {
            "type": "string"
          },
          "poster_url": {
            "type": "string",
            "format": "url"
          },
          "background_url": {
            "type": "string",
            "format": "url"
          },
          "director": {
            "type": "string"
          },
          "year": {
            "type": "integer"
          },
          "country": {
            "type": "string"
          },
          "category": {
            "type": "string"
          }
        }
      },
      "Review": {
        "type": "object",
        "required": [
          "id",
          "user_id",
          "movie_id",
          "rating",
          "created"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "user_id": {
            "type": "string",
            "format": "uuid"
          },
          "movie_id": {
            "type": "string",
            "format": "uuid"
          },
          "rating": {
            "type": "integer",
            "minimum": 1,
            "maximum": 10
          },
          "created": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "User": {
        "type": "object",
        "required": [
          "id",
          "login",
          "name",
          "avatar_url"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "login": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "avatar_url": {
            "type": "string",
            "format": "url"
          },
          "is_active": {
            "type": "boolean",
            "default": true
          },
          "is_superuser": {
            "type": "boolean",
            "default": false
          }
        }
      }
    }
  },
  "tags": []
}
